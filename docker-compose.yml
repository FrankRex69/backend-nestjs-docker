version: "3.7"

services:
  postgresbase:
    image: postgis/postgis:13-3.1-alpine
    container_name: postgres_base_container
    restart: unless-stopped
    networks:
      - proxy
    environment:
      - POSTGRES_HOST="postgresbase"
      - POSTGRES_DB="postgres"
      - POSTGRES_USER="postgres"
      - POSTGRES_PASSWORD="developmentChatOperativa"
      - TZ=Europe/Rome
      - PGTZ=Europe/Rome
    ports:
      - '5432:5432'
    volumes:
      - ./docker_volumes/postgresql_data:/var/lib/postgresql/data
      - ./init_docker/init.sql:/docker-entrypoint-initdb.d/init.sql

  app:
    # name image
    image: "backend-development:backend-development"
    # setup for build image (path for dockerfile e target in docker file [not mandatory])
    networks:
      - proxy
    build:
      # path Dockerfile
      context: ./
      # Target use in dockerfile with multiple setup (example: local, prod)
      target: "development"
    # entrypoint: bash -c '${COMMAND}'
    ports:
      - '7000:7000'
    depends_on:
      - postgresbase
    # One of the main advantages of using Docker volumes
    # is the possibility of changing the content/configuration
    # of a container without the need to recreate it.
    volumes:
     - ./backend/src:/app/backend/src

  pgadmin4_base:
    container_name: pgadmin4_base_container
    image: dpage/pgadmin4
    restart: always
    networks:
      - proxy
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - '5050:80'
    depends_on:
      - postgresbase

networks:
  proxy:
    external: true
